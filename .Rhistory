load_all()
library(devtools)
load_all()
use_mit_license()
options(usethis.full_name="C.H. van Immerzeel")
library(devtools)
document()
?group_by
document()
?mutate()
library(devtools)
load_all()
fars_read(system.file("extdata",accident_2013.csv.bz2",package="fars"))
system.file("extdata",accident_2013.csv.bz2")
)
system.file("extdata",accident_2013.csv.bz2",package="fars")
?system.file
system.file()
system.file(package="fars")
fars_read(system.file("extdata","accident_2013.csv.bz2",package="fars"))
filename <- system.file("extdata","accident_2013.csv.bz2",package="fars")
x <- fars_read(filename)
str(x)
?dirname()
basename("~")
normalizePath("~")
devtools::load_all(".")
make_filename(2013)
?match.arg
year <- c(2013,2014,2015)
as.character(year)
devtools::load_all(".")
make_filename(2013)
devtools::load_all(".")
make_filename(2013)
devtools::load_all(".")
make_filename(2013)
year <- 2013
year <- as.character(year)
year
match.arg(c("2013", "2014", "2015"))
match.arg(year, c("2013", "2014", "2015"))
devtools::load_all(".")
make_filename(2013)
fars_read_years(c("2013","2014"))
devtools::load_all(".")
fars_read_years(c(2013,2014))
year <- 2013
file <- make_filename(year)
file
?printf
?printf
devtools::load_all(".")
make_filename()
year <- 2013
system.file("extdata",sprintf("accident_%d.csv.bz2", year),package="fars")
devtools::load_all(".")
make_filename()
make_filename(2014)
make_filename(2016)
x <- fars_read_years(c(2013,2014))
year <- 2013
file <- make_filename(year)
file
dat <- fars_read(file)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
?devtools::use_package
?use_package()
devtools::use_package("magrittr")
use_package("magrittr")
devtools::load_all(".")
fars_read_years(c(2013,2014))
year
dat <- fars_read(file)
dat
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
library(magrittr)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
tryCatch({
dat <- fars_read(file)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
devtools::load_all(".")
fars_read_years()
fars_read_years(c(2013,2014))
devtools::load_all(".")
devtools::load_all(".")
fars_summarize_years()
fars_summarize_years(2013)
devtools::load_all(".")
x <- fars_read_years(2013)
str(x)
x
x$MONTH
filename
data <- fars_read(filename)
str(data)
unique(data$STATE)
devtools::load_all(".")
fars_map_state(1,2013)
?
?fars_read()
?fars_read()
?make_filename()
?make_filename()
?make_filename()
make_filename(2013)
?fars_read_years()
?fars_summarize_years()
?fars_map_state
fars_summarize_years()
fars_read_years()
x <- fars_read_years()
str(x)
x[[1]]
devtools::use_vignette()
use_vignette()
use_vignette("fars_details")
use_readme_md()
.libPaths()
browseVignettes()
install.packages("rmarkdown")
install.packages("C:/Users/NLCIMM/Downloads/pandoc-2.9.2.1-windows-i386.zip", repos = NULL, type = "win.binary")
install.packages("C:/tmp/pandoc-2.9.2.1-windows-i386.zip", repos = NULL, type = "win.binary")
install.packages("installr")
library(installr)
install.pandoc()
library(devtools)
devtools::use_vignette("fars_vignette")
use_vignette("fars_vignette")
install.packages("ghit")
install.packages("ghit")
install.packages("fars")
library(ghit)
library(devtools)
install.packages("githubinstall")
library(githubinstall)
githubinstall("fars")
devtools::github_pat()
library(dplyr)
library(testthat)
use_testthat()
use_test()
devtools::load_all(".")
fars_read(system.file("extdata","accident_2013.csv.bz2",package="fars"))
make_filename(2013)
system.file("extdata","accident_2013.csv.bz2")
system.file("extdata","accident_2013.csv.bz2",library="fars")
system.file("extdata","accident_2013.csv.bz2",package="fars")
make_filename(2010)
sample_data <- fars_read_years()
sample_data <- fars_read_years(2013)
getwd()
use_data(sample_data)
?sample_data
devtools::load_all(".")
str(sample_data)
str(sample_data)
load_all()
setwd("~/myR/Coursera/Coursera/fars/data")
x <- readRDS("sample_data.rda")
x <- readRDS("sample_data")
library(devtools)
devtools::load_all(".")
getwd()
use_travis()
getwd()
getwd()
library(devtools)
use_travis()
library(dplyr)
importFrom(dplyr,bind_rows)
library(devtools)
importFrom(dplyr,bind_rows)
c(lib.loc, .libPaths())
lib.loc
install.packages("dplyr")
install.packages("dplyr")
import("dplyr")
library(devtools)
import("dplyr")
check()
check()
?library()
check()
check()
library(dplyr)
library(dplyr)
